#include <stdio.h>
#include <iostream>
int stolbik(int x);
int second(int x);
int newdig(int x);
int allDig(int x);
int first(int x);
int lastDigit(int value);
void swap(int* x, int* y);
int maxaLL(int& y, int n);
int main()
{
	int n = 5;
	int y;
	int max = maxaLL(y, n);
	printf("max - %d, summa - %d\n", max, y);
}
int lastDigit(int value) 
{
	return value - value / 10 * 10;
}
int allDig(int x)
{
	while (x > 0){
		printf("%d\n", (x % 10));
		x = x / 10;
	}
	return 0;
}
int newdig(int x)
{
	int y = 0;
	while (x > 0) {
		y = y * 10 + x % 10;
		x /= 10;
	}
	return y;
}
int first(int x)
{
	x = newdig(x);
	return x % 10;
}
int second(int x)
{
	x = newdig(x);
	return (x % 100) / 10;
}
int stolbik(int x)
{
	x = newdig(x);
	return (x);
}
void swap(int* x, int* y)
{
	int help;
	help = *x;
	*x = *y;
	*y = help;
}
int maxaLL(int& y, int n) 
{
	int i = 0;
	int a;
	int x = 0;
	int s = 0;
	while (i < n)
	{
		scanf_s("%d", &a);
		if (x < a)x = a;
		i += 1;
		s += a;
	}
	y = s;
	return x;
}
